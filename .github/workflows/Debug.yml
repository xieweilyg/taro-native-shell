name: Debug CI

on:
  push:
    branches: [ main ]
    tags: [ d* ]

jobs:
  build-taro:
    runs-on: macos-latest
    steps: 
      - name: Fecth Taro JS Project
        uses: actions/checkout@v2
        with:
          repository: xieweilyg/Taro-Mortgage-Calculator
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install yarn dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: |
          yarn install
      - name: Build Taro JS Bundle
        run: |
          npx taro build --type rn --platform ios
      - name: Upload Taro Products
        uses: actions/upload-artifact@v2
        with:
          name: taro-ios-products
          path: dist/rn/ios/

  build-ios:
    needs: build-taro
    runs-on: macos-latest

    strategy:
      matrix:
        node-version: [14.16.0]

    steps:
      - name: Checkout project
        uses: actions/checkout@v2
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn install

      - name: Install pods
        run: cd ios && pod install

      - name: Set environment variables from project settings
        run: |
          exec .github/scripts/set-env-from-xcodeproj.sh

      - name: Import signing certificate
        env:
          SIGNING_CERTIFICATE_P12_DATA: ${{ secrets.DEBUG_SIGNING_CERTIFICATE_P12_DATA }}
          SIGNING_CERTIFICATE_PASSWORD: ${{ secrets.DEBUG_SIGNING_CERTIFICATE_PASSWORD }}
        run: |
          exec .github/scripts/import-certificate.sh

      - name: Import provisioning profile
        env:
          PROVISIONING_PROFILE_DATA: ${{ secrets.DEBUG_PROVISIONING_PROFILE_DATA }}
        run: |
          exec .github/scripts/import-profile.sh

      - name: Download Taro Products
        uses: actions/download-artifact@v2
        with: 
          name: taro-ios-products
          path: ~/download/taro-products

      - name: Import Taro Product
        run: |
          mv ~/download/taro-products/main.jsbundle ./ios/main.jsbundle
          rsync -a ~/download/taro-products/assets/ ./ios/assets/
          rm -rf ~/download/taro-products/

      - name: Build app
        run: |
          pwd
          cd ios
          bundle exec fastlane build_dev
          cd ..

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build.log
          path: taroDemo/

      - name: Upload release assets
        if: startsWith(github.ref, 'refs/tags/d')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            taroDemo.ipa
            taroDemo.app.dSYM.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}